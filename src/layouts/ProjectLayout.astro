---
import { getCollection } from "astro:content";

import { marked } from "marked";
import Layout from "./Layout.astro";
import Tag from "../../src/components/atoms/Tag.astro";
import Button from "../components/atoms/Button.astro";
import CustomCursor from "../components/atoms/CustomCursor.astro";

const { frontmatter, colorMode = "dark" } = Astro.props;
const contentHtml = marked(frontmatter.content);

const uniqueTags = Array.from(
  new Set(frontmatter.tags.map((tag: string) => tag.toLowerCase()))
);

const gallery = Array.from(
  new Set(
    (frontmatter.gallery || []).map((image: string) => image.toLowerCase())
  )
);

const allProjects = await getCollection("work");

const randomProject =
  allProjects[Math.floor(Math.random() * allProjects.length)];
---

<Layout
  pageTitle={frontmatter.title}
  metaTitle={frontmatter.title}
  colorMode={colorMode}
>
  <section>
    <img
      class="min-h-[60vh] md:min-h-[80vh] object-cover w-full md:h-[60vh] lg:h-[70vh] xl:h-[80vh]"
      src={frontmatter.thumbnail}
      alt={frontmatter.title}
    />
    <div
      class="container flex flex-col gap-12 py-8 sm:py-12 md:py-16 lg:py-20 xl:py-24 2xl:py-28 md:gap-16 lg:gap-20 xl:gap-24 2xl:gap-28"
    >
      <div class="grid gap-6 md:grid-cols-2 md:gap-12 lg:gap-20">
        <div class="flex flex-col gap-4">
          <h1>{frontmatter.title}</h1>
          <div class="flex flex-wrap gap-2">
            {
              uniqueTags.map((tag) => (
                <Tag key={tag} tagTitle={tag} colorMode={colorMode} />
              ))
            }
          </div>
        </div>
        <div class="flex flex-col gap-4 md:gap-6 lg:gap-8 2xl:gap-12">
          <div class="flex flex-col gap-3 md:gap-4" set:html={contentHtml} />
          {
            (frontmatter.siteUrl || frontmatter.figmaUrl) && (
              <div class="flex flex-col gap-4 lg:flex-row">
                {frontmatter.siteUrl && (
                  <Button
                    url={frontmatter.siteUrl}
                    icon="arrow-line-up-right"
                    title="Live site"
                    className="button--white"
                    external={true}
                  />
                )}
                {frontmatter.figmaUrl && (
                  <Button
                    url={frontmatter.figmaUrl}
                    icon="figma-logo"
                    title="Take a look on Figma"
                    className={
                      frontmatter.siteUrl
                        ? "button-outlined--white"
                        : "button--white"
                    }
                    external={true}
                  />
                )}
              </div>
            )
          }
        </div>
      </div>
      {
        gallery.length > 0 && (
          <div class="grid grid-cols-1 gap-6 md:grid-cols-2 md:gap-12 lg:gap-20 xl:gap-24 2xl:gap-28">
            {gallery.map((image) => (
              <img
                class="w-full object-cover col-span-full"
                src={image as string}
                alt={frontmatter.title}
              />
            ))}
          </div>
        )
      }
    </div>
  </section>
  <section class="next-case">
    <a
      href={`/work/${randomProject?.slug}`}
      class="min-h-[60vh] md:min-h-[80vh] relative group flex items-end py-8 md:py-10 lg:py-12"
    >
      <div
        class=`container flex flex-col-reverse gap-1 lg:gap-2 text-white relative z-20 lg:cursor-none ${
          colorMode ? "border-white" : ""
        }`
      >
        <h1 class="text-h2">
          {randomProject?.data.tagline ?? "Project tagline"}
        </h1>
        <h3 class="text-h5 font-body">
          {randomProject?.data.title ?? "Project title"}
        </h3>
      </div>
      <div
        id="hero-image"
        style={`background: linear-gradient(180deg, rgba(0, 0, 0, 0.00) 40%, rgba(0, 0, 0, 0.50) 100%), url('${randomProject?.data.thumbnail}') no-repeat center/cover;`}
        class="group-hover:brightness-90 transition-all duration-500 ease-in-out absolute inset-0 z-0 lg:cursor-none"
      >
      </div>
      <CustomCursor />
    </a>
  </section>
</Layout>

<script>
  import { handleMouseOver } from "../assets/scripts/mouseOver";
  document.addEventListener("astro:page-load", () => {
    handleMouseOver(".next-case");
  });
</script>
