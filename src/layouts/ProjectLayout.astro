---
import { getCollection } from "astro:content";

import { marked } from "marked";
import DefaultLayout from "./DefaultLayout.astro";
import Tag from "../../src/components/atoms/Tag.astro";
import Button from "../components/atoms/Button.astro";

const { frontmatter, colorMode = "dark" } = Astro.props;
const contentHtml = marked(frontmatter.content);

const uniqueTags = Array.from(
  new Set(frontmatter.tags.map((tag: string) => tag.toLowerCase()))
);

const allProjects = await getCollection("work");
const filteredProjects = allProjects.filter(
  (project) => project.slug !== frontmatter.slug
);

// Ensure the filteredProjects array is not empty
let randomProject;
if (filteredProjects.length > 0) {
  const randomIndex = Math.floor(Math.random() * filteredProjects.length);
  randomProject = filteredProjects[randomIndex];
} else {
  // Handle the case where no other projects are available
  randomProject = null; // or any default value you prefer
}
---

<DefaultLayout pageTitle={frontmatter.title} colorMode={colorMode}>
  <section>
    <img
      class="h-[50vh] object-cover w-full md:h-[60vh] lg:h-[70vh] xl:h-[80vh]"
      src={frontmatter.thumbnail}
      alt={frontmatter.title}
    />
    <div
      class="container flex flex-col gap-6 py-8 sm:py-12 md:py-16 lg:py-20 xl:py-24 2xl:py-28 md:grid md:grid-cols-2 md:gap-12 lg:gap-20"
    >
      <div class="flex flex-col gap-4">
        <h1>{frontmatter.title}</h1>
        <div class="flex flex-wrap gap-2">
          {
            uniqueTags.map((tag) => (
              <Tag key={tag} tagTitle={tag} colorMode={colorMode} />
            ))
          }
        </div>
      </div>
      <div class="flex flex-col gap-4 md:gap-6 lg:gap-8 2xl:gap-12">
        <div class="flex flex-col gap-3 md:gap-4" set:html={contentHtml} />
        {
          (frontmatter.siteUrl || frontmatter.figmaUrl) && (
            <div class="flex flex-col lg:flex-row gap-4">
              {frontmatter.siteUrl && (
                <Button
                  url={frontmatter.siteUrl}
                  icon="arrow-line-up-right"
                  title="Bekijk live site"
                  className="button--white"
                  external={true}
                />
              )}
              {frontmatter.figmaUrl && (
                <Button
                  url={frontmatter.figmaUrl}
                  icon="figma-logo"
                  title="Bekijk op Figma"
                  className={
                    frontmatter.siteUrl
                      ? "button-outlined--white"
                      : "button--white"
                  }
                  external={true}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </section>
  <section id="next-case">
    <div class="flex flex-col">
      <div
        class={`container pt-2 md:pt-4 pb-8 sm:pb-12 md:pb-16 lg:pb-20 xl:pb-24 2xl:pb-28 border-t border-black ${
          colorMode ? "border-white" : ""
        }`}
      >
        <h2>Volgende case</h2>
      </div>
      <a
        href={`/work/${randomProject?.slug}`}
        style={`background: linear-gradient(180deg, rgba(0, 0, 0, 0.00) 40%, rgba(0, 0, 0, 0.80) 100%), url('${randomProject?.data.thumbnail}') no-repeat center/cover;`}
        class="h-[50vh] md:h-[60vh] lg:h-[70vh] xl:h-[80vh] w-full flex items-end py-8"
      >
        <div class="container flex flex-col gap-1 text-white">
          <h3 class="text-h5 font-body">
            {randomProject?.data.title ?? "Project title"}
          </h3>
          <h1 class="text-h2">
            {randomProject?.data.tagline ?? "Project tagline"}
          </h1>
        </div>
      </a>
    </div>
  </section>
</DefaultLayout>
